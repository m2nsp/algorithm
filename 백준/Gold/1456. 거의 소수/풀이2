import sys
import math
input = sys.stdin.readline

A, B = map(int, input().split())  # A 이상 B 이하

def is_prime(n):                                            # n이 소수인지 확인하는 함수
    if n < 2:
        return False
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

def almost_primeNum(A, B):  # 거의 소수 찾기
    ans = 0  # 거의 소수의 개수 저장하는 변수 초기화
    
    # 2부터 B의 제곱근까지 소수만 처리
    for i in range(2, int(math.sqrt(B)) + 1):           # 그 이상의 수의 거듭제곱은 B를 넘어가므로 생각할 필요가 없음
        if is_prime(i):
            num = i * i                                 # 반복 시작하는 값: i의 거듭제곱 부터
            while num <= B:                             # i의 n제곱이 B이하일때 까지 반복
                if num >= A:
                    ans += 1
                # 오버플로우 방지를 위해 num이 B를 넘지 않도록 조심(-> 다음 계산에서!)
                if num > B // i:            # num이 B//i 보다 크면 num*=i 가 B보다 커지므로
                    break
                num *= i
    
    return ans

ans = almost_primeNum(A, B)
print(ans)
